# See https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt for the
# instructions.
#
# See http://www.onemathematicalcat.org/MathJaxDocumentation/TeXSyntax.htm for
# valid math symbols in mathjax

snippet ,ib "initialize the blogpost with template"
---
layout: post
title: $1
date: `!p
import datetime
if not snip.c:
  snip.rv = str(datetime.datetime.now())
`
categories:
    - 算法&数学
    - 数学&物理
    - 程序&设计
    - 人工智能
    - 编译原理
    - 系统&体系结构
    - 信息安全
    - 分布式计算
    - 历史&社会
    - 活着&生活
    - 文学
    - 未分类
    - 网络
    - 环境&配置
    - 经济&金融
tags:
    - Work in Progress
    - $3
---

{::comment} Not show line_numbers {:/comment}
{::options syntax_highlighter_opts="{default_lang: c++ \\}" /}

* TOC
{:toc}

$0
endsnippet

snippet ,lq "question template" b
> $1
  {: .lambda_question}
$0
endsnippet

snippet ,col "color text" i
<span style="color: ${1:blue}">$2</span>$0
endsnippet

snippet ,dm "display math" i
$$
${1:${VISUAL}}
$$
endsnippet

snippet ,m "inline math" i
$$${1:${VISUAL}}$$$0
endsnippet

snippet ,beg "begin{} / end{}" i
\begin{${1:align}}
  $0
\end{$1}
endsnippet

snippet ,code "rouge code block" i
{% highlight ${1:c++} linenos %}
$0
{% endhighlight %}
endsnippet

snippet ,a "alpha" i
\alpha
endsnippet

snippet ,b "beta" i
\beta
endsnippet

snippet ,del "delta" i
\delta
endsnippet

snippet ,D "Delta" i
\Delta
endsnippet

snippet ,e "epsilon" i
\epsilon
endsnippet

snippet ,g "gamma" i
\gamma
endsnippet

snippet ,s "sigma" i
\sigma
endsnippet

snippet ,S "Sigma" i
\Sigma
endsnippet

snippet ,ecl "epsilon-closure" i
$$\epsilon{-}closure$$
endsnippet

snippet \{ "\{\}" iA
\\{$1\\}
endsnippet

snippet ( "()" iA
($1)
endsnippet

snippet [ "[]" iA
[$1]
endsnippet

snippet | "||" iA
\vert $1 \vert
endsnippet

snippet ... "..." iA
\cdots
endsnippet

snippet ,lr{ "left{\right}" i
\left\\{
  $1
\right\\}
endsnippet

snippet ,l{ "left{" i
\left\\{
\begin{array}{l}
  $1
\end{array}
\right.
endsnippet

snippet ,lr< "left<\right>" i
\langle$1\rangle
endsnippet

snippet ,sum "sum" i
\sum_{${1}}^{${2:n}}
endsnippet

snippet ,prod "prod" i
\prod_{${1}}^{${2:n}}
endsnippet

snippet ,int "integral" i
\int_{$1}^{$2}
endsnippet

snippet ,lim "limit" i
\lim_{${1}\to ${2:\infty}} $0
endsnippet

snippet ,d "derivative operator" i
\mathrm{d}
endsnippet

snippet ,dx "dx" i
\mathrm{d}x
endsnippet

snippet ,dy "dy" i
\mathrm{d}y
endsnippet

snippet ,dz "dz" i
\mathrm{d}z
endsnippet

snippet ,p "partial derivative operator" i
\partial
endsnippet

snippet ,p/ "d/dx" i
\frac{\partial ${1}}{\partial ${2:x}}$0
endsnippet

snippet ,x "x" i
x_{$1}
endsnippet

snippet ,y "y" i
y_{$1}
endsnippet

snippet ,z "z" i
z_{$1}
endsnippet

snippet ,xy "(x,y)" i
(x$1,y$1)
endsnippet

snippet ,xyz "(x,y,z)" i
(x$1,y$1,z$1)
endsnippet

snippet ,fxy "f(x,y)" i
f(x$1,y$1)
endsnippet

snippet ,fxyz "f(x,y,z)" i
f(x$1,y$1,z$1)
endsnippet

snippet ,> "right arrow" i
\to
endsnippet

snippet ,< "left arrow" i
\leftarrow
endsnippet

snippet ,ol "over line" i
\overline{$1}
endsnippet

snippet ,o> "over right arrow" i
\overrightarrow{$1}
endsnippet

snippet ,o< "over left arrow" i
\overleftarrow{$1}
endsnippet

snippet ,>> "implies" i
\implies $0
endsnippet

snippet ,<< "implied by" i
\impliedby $0
endsnippet

snippet ,/ "fraction" i
\frac{$1}{$2}$0
endsnippet

snippet ^ "superscript" i
^{$1}$0
endsnippet

snippet _ "subscript" i
_{$1}$0
endsnippet

snippet ,img "insert image" i
![$1]({{ site.url }}/assets/`!p snip.rv = snip.basename + '/' + t[1] + '.png'`)
endsnippet

# Breaking <img ...> into multiple lines won't work.
snippet ,imgl "insert image aligned on the left" i
<img src="{{ site.url }}/assets/`!p snip.rv = snip.basename + '/' + t[1] + '.png'`" alt="$1" style="margin: 4px; max-width: 5500px">
endsnippet

