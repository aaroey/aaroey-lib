# See https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt for the
# instructions.
#
# See http://www.onemathematicalcat.org/MathJaxDocumentation/TeXSyntax.htm for
# valid math symbols in mathjax

snippet ,init "initialize the blogpost with template"
---
layout: post
title: $1
date: `!p
import datetime
if not snip.c:
  snip.rv = str(datetime.datetime.now())
`
categories:
    - 算法&数学
    - 数学&物理
    - 程序&设计
    - 人工智能
    - 编译原理
    - 系统&体系结构
    - 信息安全
    - 分布式计算
    - 历史&社会
    - 活着&生活
    - 文学
    - 未分类
    - 网络
    - 环境&配置
    - 经济&金融
tags:
    - Work in Progress
    - $3
---

{::comment} Not show line_numbers {:/comment}
{::options syntax_highlighter_opts="{default_lang: c++ \\}" /}

* TOC
{:toc}

$0
endsnippet

snippet ,q "question template" bA
> $1
  {: .lambda_question}
$0
endsnippet

snippet ,anc "hyperlink text" iA
<a name="${1}">$0</a>
endsnippet

snippet ,col "color text" iA
<span style="color: ${1:blue}">$2</span>$0
endsnippet

snippet ,ym "display math" iA
$$
${1:${VISUAL}}
$$
endsnippet

snippet ,m "inline math" iA
$$${1:${VISUAL}}$$$0
endsnippet

snippet ,beg "begin{} / end{}" iA
\begin{${1:align}}
  $0
\end{$1}
endsnippet

snippet ,code "rouge code block" iA
{% highlight ${1:c++} linenos %}
$0
{% endhighlight %}
endsnippet

snippet ",g([aAbBdDeEgGlLmMoOpPrRsStTxX])" "Greek character" irA
`!p
c = match.group(1)
if c.lower() == 'a':
  snip.rv = '\%slpha' % c
elif c.lower() == 'b':
  snip.rv = '\%seta' % c
elif c.lower() == 'd':
  snip.rv = '\%selta' % c
elif c.lower() == 'e':
  snip.rv = '\%spsilon' % c
elif c.lower() == 'g':
  snip.rv = '\%samma' % c
elif c.lower() == 'l':
  snip.rv = '\%sambda' % c
elif c.lower() == 'm':
  snip.rv = '\%su' % c
elif c.lower() == 'o':
  snip.rv = '\%smega' % c
elif c.lower() == 'p':
  snip.rv = '\%shi' % c
elif c.lower() == 'r':
  snip.rv = '\%sho' % c
elif c.lower() == 's':
  snip.rv = '\%sigma' % c
elif c.lower() == 't':
  snip.rv = '\%sheta' % c
elif c.lower() == 'x':
  snip.rv = '\%si' % c
`
endsnippet

snippet ,ecl "epsilon-closure" iA
$$\epsilon{-}closure$$
endsnippet

################ Various types of brackets

snippet "(?<!,lr)\(" "(), where the ( is not prefixed with ,lr" irA
($1)
endsnippet

snippet "(?<!,lr)\[" "[], where the [ is not prefixed with ,lr" irA
[$1]
endsnippet

snippet "(?<!l|r|\\){" "{}, where the { is not prefixed with ,l or ,lr or \" irA
{$1}
endsnippet

snippet \{ "\{\}" iA
\\{$1\\}
endsnippet

snippet <> "<>" iA
\langle $1\rangle
endsnippet

snippet "(?<!,lr)\|1" "|x|, where the |1 is not prefixed with ,lr" irA
\vert $1\vert
endsnippet

snippet "(?<!,lr)\|2" "||x||, where the |2 is not prefixed with ,lr" irA
\|$1\|
endsnippet

################ Various types of stretchy brackets

snippet ,lr( "\left(\right)" iA
\left($1\right)
endsnippet

snippet ,lr[ "\left[\right]" iA
\left[$1\right]
endsnippet

snippet ,lr{ "\left{\right}" iA
\left\\{$1\right\\}
endsnippet

snippet ,lr< "\left<\right>" iA
\left\langle $1\right\rangle
endsnippet

snippet ,lr|1 "\left|\right|" iA
\left|$1\right|
endsnippet

snippet ,lr|2 "\left\|\right\|" iA
\left\|$1\right\|
endsnippet

################

snippet ... "..." iA
\cdots
endsnippet

snippet ,l{a "\left{array\right." iA
\left\\{
\begin{array}{l}
  $1
\end{array}
\right.
endsnippet

snippet ,sum "sum" iA
\sum_{${1}}^{${2:n}}
endsnippet

snippet ,prod "prod" iA
\prod_{${1}}^{${2:n}}
endsnippet

snippet ,int "integral" iA
\int_{$1}^{$2}
endsnippet

snippet ,lim "limit" iA
\lim_{${1}\to ${2:\infty}} $0
endsnippet

snippet ,d "derivative operator" iA
\mathrm{d}
endsnippet

snippet ,pd "partial derivative operator" iA
\partial
endsnippet

snippet "([^ _])_" "subscript" irA
`!p snip.rv = match.group(1)`_{$1}
endsnippet

snippet "([^ ])\^" "superscript" irA
`!p snip.rv = match.group(1)`^{$1}
endsnippet

snippet ,> "right arrow" iA
\to
endsnippet

snippet ,< "left arrow" iA
\leftarrow
endsnippet

snippet ,ol "over line" iA
\overline{$1}
endsnippet

snippet ,o> "over right arrow" iA
\overrightarrow{$1}
endsnippet

snippet ,o< "over left arrow" iA
\overleftarrow{$1}
endsnippet

snippet ,=> "implies" iA
\implies $0
endsnippet

snippet ,=< "implied by" iA
\impliedby $0
endsnippet

snippet ,/ "fraction" iA
\frac{$1}{$2}
endsnippet

################ Images

snippet ,img "insert image" iA
![$1]({{ site.url }}/assets/`!p snip.rv = snip.basename + '/' + t[1] + '.png'`)
endsnippet

# Note: breaking <img ...> into multiple lines won't work.
snippet ,aimg "insert image aligned on the left" iA
<img src="{{ site.url }}/assets/`!p snip.rv = snip.basename + '/' + t[1] + '.png'`" alt="$1" style="margin: 4px; max-width: 5500px">
endsnippet

################ Fonts

snippet ",f(bb|bf|cal|frak|scr|sf|tt)" "math fonts" irA
\math`!p snip.rv = match.group(1)`{$1}
endsnippet

snippet ,ftx "math fonts" iA
\text{$1}
endsnippet

snippet ,ftb "math fonts" iA
\textbf{$1}
endsnippet

snippet ,fp "math fonts" iA
\pmb{$1}
endsnippet

################ Vector calculus related

snippet ,vip "inner product" iA
\langle\pmb{$1},\pmb{$2}\rangle
endsnippet

snippet ,vnorm "||v||" iA
\|\pmb{$1}\|
endsnippet

snippet ,vvals "the scalar values of a vector" iA
$1_{1},\cdots,$1_{$2}
endsnippet

snippet ,vlist "a list of vectors" iA
\pmb{$1}_{1},\cdots,\pmb{$1}_{$2}
endsnippet

################
