global !p
import time
endglobal

snippet ,main "main function" bA
int main(int argc, const char *argv[]) {
  $1
  return 0;
}
endsnippet

snippet ,test "Script for quick testing" bA
#include <cstdio>

#include <algorithm>
#include <iostream>

using std::cin;
using std::cout;
using std::endl;

int main(int argc, const char *argv[]) {
  $1
  return 0;
}
endsnippet

snippet "if "  "if statement" brA
if ($1) {
  $2
}
endsnippet

snippet "for " "for statement" brA
for ($1) {
  $2
}
endsnippet

snippet vlog "VLOG" bA
VLOG(${1:1}) << 
endsnippet

snippet log "LOG" bA
LOG(${1:ERROR}) << 
endsnippet

snippet ,dlogm "#define helper macros for LOG" bA
#define MYLOGPREFIX(id) "\033[44m\033[1m" << (id) << "\033[49m > \033[92m"
#define MYLOGSUFFIX "\033[0m"
endsnippet

snippet dlog "LOG" bA
LOG(WARNING) << MYLOGPREFIX("`!p snip.rv = str(time.time()).split('.')[0][-5:]`") << $1 << MYLOGSUFFIX;
endsnippet

snippet "class " "class" brA
class $1 {
 public:
  $2
};
endsnippet

snippet todo "TODO" bA
// TODO(laigd): 
endsnippet

snippet inc "#include" bA
#include 
endsnippet

snippet ,v "std::vector" i
std::vector<$1> 
endsnippet

snippet ,m "std::map" i
std::map<$1> 
endsnippet

snippet ,up "std::unique_ptr" i
std::unique_ptr<$1> 
endsnippet

snippet ,um "std::unordered_map" i
std::unordered_map<$1> 
endsnippet
